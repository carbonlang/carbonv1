[ COMMENT ]

[ IMPORT ] [ LIT:string ]
[ IMPORT ] [ LIT:string ]

[ MODULE ] [ IDENTIFIER ] [ { ]
[ } ]

[ DEF ] [ MAIN ][ ( ][ ) ] [ -> ] [ ( ][ TYPE:int ][ ) ] [ { ]
	[ TYPE_QUALIFIER:const ] [ TYPE:bool ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:false ]
	[ STORAGE_CLASS:register ] [ TYPE:int ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:binary ]
	[ TYPE:int ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:octal ]
	[ TYPE:int ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:decimal ]
	[ TYPE:int ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:hex ]
	[ TYPE:int ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:decimal ]
	[ TYPE:int ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:decimal ]
	[ TYPE:int ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:decimal ]
	[ TYPE:int ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:hex ]
	[ TYPE:float32 ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:float ]
	[ TYPE:float32 ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:float ]
	[ TYPE:float32 ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:float ]
	[ TYPE:char ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:char ]
	[ TYPE:char ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:char ]
	[ TYPE:char ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:decimal ]
	[ TYPE:string ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:string ]
	[ TYPE:string ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:string ]
	[ TYPE:string ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:string ]
	[ TYPE:string ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:string ]
	[ TYPE:string ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:string ]
	[ TYPE:string ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:string ]
	[ TYPE:string ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:string ]
	[ TYPE:string ] [ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:string ]
	[ TYPE:ptr ] [ : ] [ TYPE:int ] [ IDENTIFIER ]
	[ TYPE:type ] [ TYPE:struct ] [ IDENTIFIER ] [ { ]
		[ TYPE:int ] [ IDENTIFIER ]
		[ TYPE:char ] [ IDENTIFIER ]
		[ TYPE:string ] [ IDENTIFIER ]
	[ } ]
			
	[ IDENTIFIER ] [ OP:B:AS:= ] [ IDENTIFIER ] [ OP:B:AR:+ ] [ IDENTIFIER ] [ OP:B:AR:- ] [ IDENTIFIER ] [ OP:B:AR:* ] [ ( ][ IDENTIFIER ] [ OP:B:AR:/ ] [ IDENTIFIER ] [ OP:B:AR:% ] [ IDENTIFIER ][ ) ]
	[ IDENTIFIER ] [ OP:B:RL:== ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:RL:!= ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:RL:< ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:RL:<= ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:RL:> ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:RL:>= ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:SH:>> ] [ LIT:decimal ]
	[ IDENTIFIER ] [ OP:B:SH:<< ] [ LIT:decimal ]
	[ IDENTIFIER ] [ OP:B:SH:>>> ] [ LIT:decimal ]
	[ IDENTIFIER ] [ OP:B:SH:<<< ] [ LIT:decimal ]
	[ IDENTIFIER ] [ OP:B:LG:|| ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:LG:&& ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:BT:& ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:BT:| ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:BT:^ ] [ IDENTIFIER ]
	[ IDENTIFIER ] [ OP:B:BT:&^ ] [ IDENTIFIER ]
	[ OP:U:L:! ][ IDENTIFIER ]
	[ OP:U:L:~ ][ IDENTIFIER ]
	[ OP:U:L:@ ][ IDENTIFIER ]
	[ IDENTIFIER ][ OP:U:R:++ ]
	[ IDENTIFIER ][ OP:U:R:-- ]
	

	[ COMMENT ]
	[ IDENTIFIER ][ . ][ IDENTIFIER ][ ( ][ IDENTIFIER ][ ) ]

	[ STMT:if ] [ ( ][ IDENTIFIER ] [ OP:B:RL:> ] [ IDENTIFIER ][ ) ] [ { ]
		[ IDENTIFIER ] [ OP:B:AS:= ] [ IDENTIFIER ]
	[ } ] [ STMT:else ] [ STMT:if ] [ ( ][ IDENTIFIER ] [ OP:B:RL:< ] [ IDENTIFIER ][ ) ] [ { ]
		[ IDENTIFIER ] [ OP:B:AS:= ] [ IDENTIFIER ] [ OP:B:AR:- ] [ IDENTIFIER ]
	[ } ] [ STMT:else ] [ { ]
		[ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:decimal ]
	[ } ]

	[ STMT:for ] [ ( ][ IDENTIFIER ] [ OP:B:AS:= ] [ LIT:decimal ][ ; ] [ IDENTIFIER ] [ OP:B:RL:< ] [ LIT:decimal ][ ; ] [ IDENTIFIER ][ OP:U:R:++ ][ ) ] [ { ]
		[ IDENTIFIER ][ . ][ IDENTIFIER ][ ( ][ IDENTIFIER ][ ) ]
	[ } ]

	[ IDENTIFIER ] [ ( ][ IDENTIFIER ][ ) ] [ { ]
		[ IDENTIFIER ] [ LIT:decimal ] [ : ] [ IDENTIFIER ][ ( ][ LIT:string ][ ) ]
		[ IDENTIFIER ] [ IDENTIFIER ] [ OP:B:RL:< ] [ LIT:decimal ] [ : ] [ IDENTIFIER ][ ( ][ LIT:string ][ ) ]
		[ IDENTIFIER ][ : ] [ IDENTIFIER ][ ( ][ LIT:string ][ ) ]
			[ IDENTIFIER ][ ( ][ LIT:string ][ ) ]
			[ STMT:return ]
	[ } ]

	[ STMT:while ] [ ( ][ IDENTIFIER ] [ OP:B:RL:< ] [ LIT:decimal ][ ) ] [ { ]
		[ IDENTIFIER ][ OP:U:R:++ ]
		[ IDENTIFIER ][ OP:U:R:-- ]
	[ } ]

	[ STMT:defer ] [ { ]
		[ IDENTIFIER ][ ( ][ IDENTIFIER ][ ) ]
	[ } ]

	[ STMT:return ] [ LIT:decimal ]
[ } ]

[ ASC_MOD:public ] [ DEF ] [ IDENTIFIER ][ ( ][ TYPE:int ] [ IDENTIFIER ][ , ] [ TYPE:int ] [ IDENTIFIER ][ ) ] [ -> ] [ ( ][ ) ] [ { ]

[ } ]

[ ASC_MOD:private ] [ DEF ] [ IDENTIFIER ][ ( ][ TYPE:ptr ] [ : ] [ TYPE:int ] [ IDENTIFIER ][ ) ] [ -> ] [ ( ][ ) ] [ { ]
[ } ]

